#Adaline
yadaline<-function(w,x)
{
  
  y<-x%*%w
  return(y)
}
treina_adaline<-function(xin,yd,eta,tol,maxepocas,par)
{
  dimx<-dim(xin)#tamanho de xin
  N<-dimx[1]#linhas
  n<-dimx[2]#colunas
  if(par==1){
    wt<-as.matrix(runif(n+1)-0.5)#gera numeros aleatorios,se for 2 valores vem pra ca
    xin<-cbind(1,xin)
  }
  else wt<-as.matrix(runif(n)-0.5)
  nepocas<-0
  eepoca<-tol+1
  evec<-matrix(nrow=1,ncol=maxepocas)
  while((nepocas< maxepocas)&&(eepoca  >tol))
  {
    ei2<-0
    xseq<-sample(N)#sample obtém uma amostra do tamanho especificado dos elementos de x usando com ou sem substituição.
    for(i in 1:N)#encontrando novos w
    {
      irand<-xseq[i]
      yhati<-1.0*((xin[irand,]%*% wt))
      ei<-yd[irand]-yhati#erro yesperado - y encontrado
      dw<-eta*ei*xin[irand,]#ne*xi 
      wt<-wt+dw #novo peso calculado 
      ei2<-ei2+ei*ei#soma dos erros encontrados equivalente no scilab b=b+ alfae
      
    }
    nepocas<-nepocas+1#nepoca= numero de iterações
    evec[nepocas]<-ei2/N #erro quadráico médio
    eepoca<-evec[nepocas]#erro atual
    
  }
  retlist<-list(wt,evec[1:nepocas])
  return(retlist)
   
}

library(ggplot2)
library(reshape2)



#Declaração de todos os dados
tempo_total<-c(0.3,0.6,0.9,1.2,1.5,1.8,2.1,2.4,2.7,3,3.3,3.6,3.9,4.2,4.5,4.8,5.1,5.4,5.7,6)
tempo_total<-matrix(data=tempo_total,nrow=20,ncol=1)
x_total<-c(0.29552020666134,0.564642473395035,0.783326909627483,0.932039085967226,0.997494986604054,0.973847630878195,0.863209366648874,0.675463180551151,0.42737988023383,0.141120008059868,-0.157745694143248,-0.442520443294852,-0.687766159183973,-0.871575772413588,-0.977530117665097,-0.996164608835841,-0.925814682327732,-0.772764487555988,-0.550685542597638,-0.279415498198926)
x_total<-matrix(data=x_total,nrow=20,ncol=1)
y_total<-c(0.588656061998402,0.669392742018511,0.734998072888245,0.779611725790168,0.799248495981216,0.792154289263459,0.758962809994662,0.702638954165345,0.628213964070149,0.54233600241796,0.452676291757026,0.367243867011544,0.293670152244808,0.238527268275924,0.206740964700471,0.201150617349248,0.22225559530168,0.268170653733204,0.334794337220709, 0.416175350540322)
y_total<-matrix(data=y_total,nrow=20,ncol=1)

#plotagem das entradas e sáidas
dados<-data.frame(X= c(x_total),Y=c(y_total),t=c(tempo_total),stringsAsFactors = FALSE)
ggplot(dados)+geom_point(aes(x =tempo_total, y =x_total),col='red',)+geom_point(aes(x =tempo_total, y =aux_y),col='blue')+geom_line(aes(x =tempo_total, y =x_total,color="Entrada"))+geom_line(aes(x =tempo_total, y =aux_y,color="Saida"))+theme(legend.position=c(0.1, 0.1))


#Treinamento dos Dados:
treino_tempo<-c(0.3,0.6,0.9,1.2,1.5,1.8,2.1,2.4,2.7,3,3.3,3.6,3.9,4.2)
treino_tempo<-matrix(data=treino_tempo,nrow=14,ncol=1)

treino_y<-c(0.588656061998402,0.669392742018511,0.734998072888245,0.779611725790168,0.799248495981216,0.792154289263459,0.758962809994662,0.702638954165345,0.628213964070149,0.54233600241796,0.452676291757026,0.367243867011544,0.293670152244808,0.238527268275924)
treino_y<-matrix(data=treino_y,nrow=14,ncol=1)  

treino_x<-c( 0.29552020666134,0.564642473395035,0.783326909627483,0.932039085967226,0.997494986604054,0.973847630878195,0.863209366648874,0.675463180551151,0.42737988023383,0.141120008059868,-0.157745694143248,-0.442520443294852,-0.687766159183973,-0.871575772413588)
valorb<-c(1,1,1,1,1,1,1,1,1,1,1,1,1,1)
#treino_x<-c(treino_x,treino_tempo,valorb)
treino_x<-matrix(data=treino_x,nrow=14,ncol=1)  

tol=0.0001
eta<-0.1
maxepocas<-100
par<-1

result1 <- treina_adaline(treino_x, treino_y,eta,tol,maxepocas,par)
erros<-result1[2]
w<-result1[1]
b2<-c(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1)
w2<-matrix(unlist(w),nrow=2,ncol=1)
teste_entrada<-c(treino_tempo,b2)
teste_entrada<-matrix(data=teste_entrada,nrow=20,ncol=2)
y_encontrado<-teste_entrada%*%w2
y_encontrado<-matrix(data=y_encontrado,nrow=20,ncol=1)
dados2<-data.frame(X= c(tempo_total),Y=c(y_encontrado),t=c(y_total),stringsAsFactors = FALSE)
ggplot(dados)+geom_point(aes(x =tempo_total, y =aux_y),col='blue')+geom_line(aes(x =tempo_total, y =aux_y,color="Original"))+geom_line(aes(x =tempo_total, y =y_encontrado,color="Previsto"))+theme(legend.position=c(0.1, 0.1))





